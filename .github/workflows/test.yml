name: Reusable test workflow

on:
  workflow_call:
    inputs:
      channel:
        required: true
        type: string
        description: 'Which Defold version use to build. Possible values: alpha, beta, stable'
      build_server:
        required: false
        type: string
        description: 'Buld server url'
        default: 'https://build-stage.defold.com'
      parallel_task_count:
        required: false
        type: number
        description: 'How many jobs can run in parallel'
        default: 2
    secrets:
      slack_webhook:
        required: true
      extender_header_name:
        required: true
      extender_header_value:
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: ${{ inputs.parallel_task_count }}
      matrix:
        projects: [
          { name: 'Spine', url: 'https://github.com/defold/extension-spine', head: 'main' },
          #{ name: 'Texturepacker', url: 'https://github.com/defold/extension-texturepacker/archive/refs/heads/main.zip' },
          #{ name: 'Rive', url: 'https://github.com/defold/extension-rive/archive/master.zip' },
          
          # { name: 'AdInfo', url: 'https://github.com/defold/extension-adinfo', head: 'master' },
          # { name: 'AdMob', url: 'https://github.com/defold/extension-admob',  head: 'master' },
          # { name: 'Camera', url: 'https://github.com/defold/extension-camera', head: 'master' },
          # { name: 'Facebook', url: 'https://github.com/defold/extension-facebook', head: 'master' },
          # { name: 'FBInstance', url: 'https://github.com/defold/extension-fbinstant', head: 'master' },
          # { name: 'Firebase', url: 'https://github.com/defold/extension-firebase', head: 'master' },
          # { name: 'Firebase analytics', url: 'https://github.com/defold/extension-firebase-analytics', head: 'master' },
          # { name: 'Firebase remote config', url: 'https://github.com/defold/extension-firebase-remoteconfig', head: 'master' },
          # { name: 'GP Instant', url: 'https://github.com/defold/extension-googleplayinstant', head: 'master' },
          # { name: 'GPGS', url: 'https://github.com/defold/extension-gpgs', head: 'master' },
          # { name: 'HTML5', url: 'https://github.com/defold/extension-html5', head: 'master' },
          # { name: 'IAC', url: 'https://github.com/defold/extension-iac', head: 'master' },
          # { name: 'IAP', url: 'https://github.com/defold/extension-iap', head: 'master' },
          # { name: 'KaiAds', url: 'https://github.com/defold/extension-kaiads', head: 'main' },
          # { name: 'KaiOS', url: 'https://github.com/defold/extension-kaios', head: 'main' },
          # { name: 'Crypt', url: 'https://github.com/defold/extension-crypt', head: 'master' },
          # { name: 'Poco', url: 'https://github.com/defold/extension-poco', head: 'master' },
          # { name: 'Push', url: 'https://github.com/defold/extension-push', head: 'master' },
          # { name: 'Review', url: 'https://github.com/defold/extension-review', head: 'master' },
          # { name: 'SafeArea', url: 'https://github.com/defold/extension-safearea', head: 'master' },
          # { name: 'Siwa', url: 'https://github.com/defold/extension-siwa', head: 'master' },
          # { name: 'Videoplayer', url: 'https://github.com/defold/extension-videoplayer-native', head: 'master' },
          # { name: 'Webmonetization', url: 'https://github.com/defold/extension-webmonetization', head: 'master' },
          # { name: 'Websocket', url: 'https://github.com/defold/extension-websocket', head: 'master' },
          # { name: 'Webview', url: 'https://github.com/defold/extension-webview', head: 'master' },
          # { name: 'Template NE', url: 'https://github.com/defold/template-native-extension', head: 'master' },
          # { name: 'Screenshot', url: 'https://github.com/britzl/defold-screenshot', head: 'master' },
          # { name: 'LuaSec', url: 'https://github.com/britzl/defold-luasec', head: 'master' },
          # { name: 'Sharing', url: 'https://github.com/britzl/defold-sharing', head: 'master' },
          # { name: 'Imgui', url: 'https://github.com/britzl/extension-imgui', head: 'master' },
          # { name: 'VideoAds', url: 'https://github.com/AGulev/DefVideoAds', head: 'master' },
          # { name: 'Defos', url: 'https://github.com/subsoap/defos', head: 'master' },
          # { name: 'Directories', url: 'https://github.com/Lerg/extension-directories', head: 'master' },
          # { name: 'FMOD', url: 'https://github.com/dapetcu21/defold-fmod', head: 'master' },

          # { name: 'Poki SDK', url: 'https://github.com/defold/extension-poki-sdk', head: 'main' },
          # { name: 'Ironsource', url: 'https://github.com/defold/extension-ironsource', head: 'main' },
          # { name: 'Zendesk', url: 'https://github.com/defold/extension-zendesk', head: 'master' },
          # { name: 'Steam', url: 'https://github.com/defold/extension-steam', head: 'master' },
          # { name: 'Simpledata', url: 'https://github.com/defold/extension-simpledata', head: 'main' },
          # { name: 'Permissions', url: 'https://github.com/defold/extension-permissions', head: 'master' },
                    
          # Disabled until GA-SDK-DEFOLD supports both x86_64-osx and arm64-osx
          # https://github.com/GameAnalytics/GA-SDK-DEFOLD/issues/40
          #'https://github.com/GameAnalytics/GA-SDK-DEFOLD/archive/master.zip',
                    
          # Bob.jar plugins:
          # { name: 'Lua preprocessor', url: 'https://github.com/defold/extension-lua-preprocessor', head: 'main' },
          # { name: 'Prometheus', url: 'https://github.com/defold/extension-prometheus', head: 'master' },
          # { name: 'Resource encryption', url: 'https://github.com/defold/extension-resource-encryption', head: 'master' },
        ]
    name: ${{ matrix.projects.name }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12
        with:
          java-version: '21.0.5+11.0.LTS'
          architecture: x64
          distribution: 'temurin'

      - name: Retrieve version
        id: versions
        run: |
          if [ ! -z "$EXTENDER_HEADER_NAME" ]; then
            EXTENDER_SHA=$(wget --header "${EXTENDER_HEADER_NAME}: ${EXTENDER_HEADER_VALUE}" -q -O - $BUILD_SERVER | awk -F'<br>' '{print $2}')
          else
            EXTENDER_SHA=$(wget -q -O - $BUILD_SERVER | awk -F'<br>' '{print $2}')
          fi

          if [ ! -z ${CHANNEL} ]; then
            ENGINE_SHA=$(curl -H 'Cache-Control: no-cache' -s https://d.defold.com/${CHANNEL}/info.json | sed 's/.*sha1": "\(.*\)".*/\1/')
          fi

          EXTENSION_SHA=$(git ls-remote ${{ matrix.projects.url }}.git refs/heads/${{ matrix.projects.head }} | awk '{ print $1}')

          echo "Found versions: engine - $ENGINE_SHA; extender - $EXTENDER_SHA; extension - $EXTENSION_SHA"

          echo "engine_sha=$ENGINE_SHA" >> "$GITHUB_OUTPUT"
          echo "extender_sha=$EXTENDER_SHA" >> "$GITHUB_OUTPUT"
          echo "extension_sha=$EXTENSION_SHA" >> "$GITHUB_OUTPUT"
        env:
          CHANNEL: ${{ inputs.channel }}
          BUILD_SERVER: ${{ inputs.build_server }}
          PROJECT: ${{ matrix.projects.url }}
          EXTENDER_HEADER_NAME: ${{ secrets.extender_header_name }}
          EXTENDER_HEADER_VALUE: ${{ secrets.extender_header_value }}

      - name: Check cached build result
        id: build-result
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          key: ${{ matrix.projects.name }}-${{ steps.versions.outputs.extension_sha }}-${{ steps.versions.outputs.extender_sha }}-${{ steps.versions.outputs.engine_sha }}
          path: ${{ github.workspace }}/extender_success_platforms
          lookup-only: false

      - name: Define platforms to build
        id: define-platform
        run: |
          PLATFORM_TO_BUILD="js-web,x86_64-win32,x86_64-linux,x86_64-macos,arm64-macos,arm64-ios,armv7-android"
          CACHE_FOUND=${{ steps.build-result.outputs.cache-hit }}
          if [[ $CACHE_FOUND == "true" ]]; then
            CACHE_FILE=${{ github.workspace }}/extender_success_platforms
            CACHE_CONTENT=$(cat $CACHE_FILE)
            echo "Found cached results for platforms: $CACHE_CONTENT"
            platforms_to_check=("js-web" "x86_64-win32" "x86_64-linux" "x86_64-macos" "arm64-macos" "arm64-ios" "armv7-android")
            result_platforms=()
            for str in ${platforms_to_check[@]}; do
              if [[ $CACHE_CONTENT != *$str* ]]; then
                  result_platforms+=($str)
              fi
            done
            PLATFORM_TO_BUILD=$(IFS=,; echo "${result_platforms[*]}")
            rm ${{ github.workspace }}/extender_success_platforms
          else
            echo "No cached results was found. Build all platforms"
          fi
          echo "Platforms to build: $PLATFORM_TO_BUILD"
          echo "platforms=$PLATFORM_TO_BUILD" >> "$GITHUB_OUTPUT"
          echo "cached_result=$CACHE_CONTENT" >> "$GITHUB_OUTPUT"

      - name: Create project url
        id: project-url
        run: echo "project_url=${{ matrix.projects.url }}/archive/refs/heads/${{ matrix.projects.head }}.zip" >> "$GITHUB_OUTPUT"

      - name: Run tests ${{ inputs.channel }}
        if: ${{ steps.define-platform.outputs.platforms != '' }}
        run: ./run-tests.sh
        env:
          CHANNEL: ${{ inputs.channel }}
          BUILD_SERVER: ${{ inputs.build_server }}
          PLATFORMS: ${{ steps.define-platform.outputs.platforms }}
          PROJECT: ${{ steps.project-url.outputs.project_url }}
          EXTENDER_HEADER_NAME: ${{ secrets.extender_header_name }}
          EXTENDER_HEADER_VALUE: ${{ secrets.extender_header_value }}
          GITHUB_ACTIONS: true
      - name: Merge result values
        if: always()
        run: |
          CACHED_CONTENT=${{ steps.define-platform.outputs.cached_result }}
          splitted_cached_platforms=(${CACHED_CONTENT//,/ })
          CURRENT_BUILD_RESULT=$(cat ${{ github.workspace }}/extender_success_platforms)
          splitted_current_platforms=(${CURRENT_BUILD_RESULT//,/ })
          merged_result=()
          for str in ${splitted_cached_platforms[@]}; do
            merged_result+=($str)
          done
          for str in ${splitted_current_platforms[@]}; do
            merged_result+=($str)
          done
          echo "Result platforms: $(IFS=,; echo "${merged_result[*]}")"
          echo $(IFS=,; echo "${merged_result[*]}") >> ${{ github.workspace }}/extender_success_platforms

      - name: Cache build success information
        if: always()
        uses: actions/cache/save@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: ${{ github.workspace }}/extender_success_platforms
          key: ${{ matrix.projects.name }}-${{ steps.versions.outputs.extension_sha }}-${{ steps.versions.outputs.extender_sha }}-${{ steps.versions.outputs.engine_sha }}
      # - name: Notify if tests failed
      #   if: failure()  
      #   uses: homoluctus/slatify@c4847b8c84e3e8076fd3c42cc00517a10426ed65
      #   with:
      #     type: ${{ job.status }}
      #     job_name: 'SDK tests ${{ inputs.channel }}'
      #     channel: '#defold-alarms-build'
      #     url: ${{ secrets.slack_webhook }}
